MSRes*(diag(n)-Hx)
sqrtm(MSRes*(diag(n)-Hx))
solve(sqrtm(MSRes*(diag(n)-Hx)))
r <- t(e)%*%solve(sqrtm(MSRes*(diag(n)-Hx)))
r
r <- solve(sqrtm(MSRes*(diag(n)-Hx)))%*%e
r
#residuos estudentizados
Hx <- x%*%solve(t(x)%*%x)%*%t(x)
Hx
diag(Hx)
(1:25)-0.5
qnorm(((1:25)-0.5))/25)
qnorm(((1:25)-0.5)/25)
es<-qnorm(((1:25)-0.5)/25)
plot(e,es)
plot(sort(e),es)
plot(es,sort(e)
plot(es,sort(e))
plot(es,sort(e))
plot(y_est,e)
plot(base$x1,e)
plot(base$x2,e)
SSRes
#R2
SSR/SCT
#==========================================
XX <- matrix(c(30,0,0,0,40,20,0,20,60),byrow = T)
XX
#==========================================
XX <- matrix(c(30,0,0,0,40,20,0,20,60),3,3,byrow = T)
XX
sqrtm(xx)
#==========================================
xx <- matrix(c(30,0,0,0,40,20,0,20,60),3,3,byrow = T)
xx
sqrtm(xx)
xx <- matrix(c(30,0,0,0,40,20,0,20,60),3,3,byrow = T)
xx
xy <- matrix(c(132,24,92),3,1)
xy
b_est <- solve(xx)%*%xy
b_est
sqrtm(xx)
diag(solve(xx))
solve(xx)
150/17
?qt
qt(0.05,17)
qt(1-0.05,17)
qt(1-0.05,27)
qt(1-0.05,4)
#Prueba de hipotesis general
T <- matrix(c(0,1,0,0,0,1),2,3,byrow = T)
T
c<- matrix(c(1,1),2,1)
c
b_est <- solve(xx)%*%xy
b_est
t(T%*%b_est - c) %*% solve(T%*%solve(xx)%*%t(T)) %*% t(t(T%*%b_est - c))
?ft
?qf
qf(1-0.05,2,17)
y<-c(210,110,103,103,91,76,73,70,68,53,45,31)
x1<-c(16.7,17.4,18.4,16.8,18.9,17.1,17.3,18.2,21.3,21.2,20.7,18.5)
x2<-c(30,42,47,47,43,41,48,44,43,50,56,60)
base<-data.frame(y,x1,x2)
n<-nrow(base)
plot(base$x1,base$y)
plot(base$x2,base$y)
#beta estimado
x <- as.matrix(cbind(1,base[,2:3]))
y <- as.matrix(base$y)
p=ncol(x)
x
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
SSR <- t(b_est)%*%t(x)%*%y - (sum(y))^2/n
SSR
SCT <- t(y)%*%y - (sum(y))^2/n
SCT
MSRes <- as.numeric(SSRes/(n-p))
MSRes
#R2
SSR/SCT
y_est <- x%*%b_est
y_est
e <- y - y_est
e
d <- e/sqrt(MSRes)
d
cov_best <- MSRes*solve(t(x)%*%x)
cov_best
cov(x)
cov(x{,2:3})
cov(x{2:3,2:3})
qt(1-0.05/2,22)
b_est
#============================================================================
# Datos tiempo de entrega
#============================================================================
y<-c(16.68,11.50,12.03,14.88,13.75,18.11,8.00,17.83,79.24,21.50,40.33,21.00,13.50,19.75,
24.00,29.00,15.35,19.00,9.50,35.10,17.90,52.32,18.75,19.83,10.75)
x1<-c(7,3,3,4,6,7,2,7,30,5,16,10,4,6,9,10,6,7,3,17,10,26,9,8,4)
x2<-c(560,220,340,80,150,330,110,210,1460,605,688,215,255,462,448,776,200,132,36,770,140,
810,450,635,150)
base<-data.frame(y,x1,x2)
n<-nrow(base)
#beta estimado
x <- as.matrix(cbind(1,base[,2:3]))
y <- as.matrix(base$y)
p=ncol(x)
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
MSRes
MSRes <- as.numeric(SSRes/(n-p))
MSRes
#Suma de cuadrados residual
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
MSRes <- as.numeric(SSRes/(n-p))
MSRes
Hx <- x%*%solve(t(x)%*%x)%*%t(x)
Hx
diag(Hx)
# Datos tiempo de entrega
#============================================================================
y<-c(16.68,11.50,12.03,14.88,13.75,18.11,8.00,17.83,79.24,21.50,40.33,21.00,13.50,19.75,
24.00,29.00,15.35,19.00,9.50,35.10,17.90,52.32,18.75,19.83,10.75)
x1<-c(7,3,3,4,6,7,2,7,30,5,16,10,4,6,9,10,6,7,3,17,10,26,9,8,4)
x2<-c(560,220,340,80,150,330,110,210,1460,605,688,215,255,462,448,776,200,132,36,770,140,
810,450,635,150)
base<-data.frame(y,x1,x2)
n<-nrow(base)
#beta estimado
x <- as.matrix(cbind(1,base[,2:3]))
y <- as.matrix(base$y)
p=ncol(x)
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
#Suma de cuadrados residual
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
#Sumca de cuadrados de la regresion
SSR <- t(b_est)%*%t(x)%*%y - (sum(y))^2/n
SSR
#Suma de cuadrados total
SCT <- t(y)%*%y - (sum(y))^2/n
SCT
#Estimacion de la varianza
MSRes <- as.numeric(SSRes/(n-p))
MSRes
#R2
SSR/SCT
#Y estimado
y_est <- x%*%b_est
y_est
#residuo ordinario
e <- y - y_est
e
#residuos estandarizados
d <- e/sqrt(MSRes)
d
#residuos estudentizados
Hx <- x%*%solve(t(x)%*%x)%*%t(x)
Hx
diag(Hx)
diag(solv(xx))
diag(solv(t(x)%*%x))
diag(solve(t(x)%*%x))
y<-c(210,110,103,103,91,76,73,70,68,53,45,31)
x1<-c(16.7,17.4,18.4,16.8,18.9,17.1,17.3,18.2,21.3,21.2,20.7,18.5)
x2<-c(30,42,47,47,43,41,48,44,43,50,56,60)
base<-data.frame(y,x1,x2)
n<-nrow(base)
#beta estimado
x <- as.matrix(cbind(1,base[,2:3]))
y <- as.matrix(base$y)
p=ncol(x)
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
#Suma de cuadrados residual
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
#Sumca de cuadrados de la regresion
SSR <- t(b_est)%*%t(x)%*%y - (sum(y))^2/n
SSR
#Suma de cuadrados total
SCT <- t(y)%*%y - (sum(y))^2/n
SCT
#Estimacion de la varianza
MSRes <- as.numeric(SSRes/(n-p))
MSRes
#cov del beta estimado
cov_best <- MSRes*solve(t(x)%*%x)
cov_best
#R2
SSR/SCT
#Y estimado
y_est <- x%*%b_est
y_est
#residuo ordinario
e <- y - y_est
e
#residuos estandarizados
d <- e/sqrt(MSRes)
d
b_est
SSRes
SSR <- t(b_est)%*%t(x)%*%y - (sum(y))^2/n
SSR
SCT <- t(y)%*%y - (sum(y))^2/n
SCT
MSRes <- as.numeric(SSRes/(n-p))
MSRes
matrix(C(1,18,45),1,3)
matrix(C(1,18,45),1,2)
matrix(c(1,18,45),1,3)
matrix(c(1,18,45),1,3)%*%b_Est
matrix(c(1,18,45),1,3)%*%b_est
_est
yo<-matrix(c(1,18,45),1,3)%*%b_est
yo
a<-matrix(c(1,18,45),1,3)
yo<-a%*%b_est
yo
a
a<-matrix(c(1,18,45),1,3,byrow = T)
yo<-t(a)%*%b_est
yo
yo<-t(a)%*%b_est
a
a<-matrix(c(1,18,45),1,3,byrow = F)
a
a<-matrix(c(1,18,45),3,1)
yo<-t(a)%*%b_est
yo
a
yo+qt(1-0.05/2,n-p)*sqrt(MSRes*(1+t(a)%*%solve(t(x)%*%x)%*%a))
yo-qt(1-0.05/2,n-p)*sqrt(MSRes*(1+t(a)%*%solve(t(x)%*%x)%*%a))
yo
qt(1-0.05/2,n-p)
MSRes
t(a)%*%solve(t(x)%*%x)%*%a
yo-qt(1-0.05/2,n-p)*sqrt(MSRes*(1+t(a)%*%solve(t(x)%*%x)%*%a))
y<-c(210,110,103,103,91,76,73,70,68,53,45,31)
x1<-c(16.7,17.4,18.4,16.8,18.9,17.1,17.3,18.2,21.3,21.2,20.7,18.5)
x2<-c(30,42,47,47,43,41,48,44,43,50,56,60)
y<-c(210,110,103,103,91,76,73,70,68,53,45,31)
x1<-c(16.7,17.4,18.4,16.8,18.9,17.1,17.3,18.2,21.3,21.2,20.7,18.5)
x2<-c(30,42,47,47,43,41,48,44,43,50,56,60)
base<-data.frame(y,x1,x2)
n<-nrow(base)
x <- as.matrix(cbind(1,base[,2:3]))
y <- as.matrix(base$y)
p=ncol(x)
t(x)%*%y
sum(base$y)
t(x)%*%x
solve(t(x)%*%x)
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
y_est <- x%*%b_est
y_est
#R2
SSR/SCT
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
t(y)%*%y
t(b_est)%*%t(x)%*%y
SSRes<-t(y)%*%y - t(b_est)%*%t(x)%*%y
SSRes
n-p
MSRes <- as.numeric(SSRes/(n-p))
MSRes
cov_best <- MSRes*solve(t(x)%*%x)
cov_best
a<-matrix(c(1,18,45),3,1)
a
yo<-t(a)%*%b_est
yo
MSRes
yo+qt(1-0.05/2,n-p)*sqrt(MSRes*(1+t(a)%*%solve(t(x)%*%x)%*%a))
yo-qt(1-0.05/2,n-p)*sqrt(MSRes*(1+t(a)%*%solve(t(x)%*%x)%*%a))
SSR <- t(b_est)%*%t(x)%*%y - (sum(y))^2/n
SSR
x1 <- as.matrix(cbind(1,base[,2]))
x1
b_est1 <- solve(t(x1)%*%x1)%*%t(x1)%*%y
b_est1
SSR1 <- t(b_est1)%*%t(x1)%*%y - (sum(y))^2/n
SSR1
Hx <- x%*%solve(t(x)%*%x)%*%t(x)
Hx1 <- x1%*%solve(t(x1)%*%x1)%*%t(x1)
t(y)%*%(Hx-Hx1)&*&y
t(y)%*%(Hx-Hx1)%*%y
MSRes
SSR1/MSRes
n-p
qt(1-0.05,1,n-p)
qf(1-0.05,1,n-p)
b_est <- solve(t(x)%*%x)%*%t(x)%*%y
b_est
b_est[1]
solve(t(x)%*%x
)
diag(solve(t(x)%*%x))
diag(solve(t(x)%*%x))[2]
b_est[2]/sqrt(MSRes*diag(solve(t(x)%*%x))[2])
b_est[3]/sqrt(MSRes*diag(solve(t(x)%*%x))[3])
cor(x)
cor(base)
b_est
b_est[2]
MSRes
solve(t(x)%*%x)
diag(solve(t(x)%*%x))
diag(solve(t(x)%*%x))[2]
b_est[2]/sqrt(MSRes*diag(solve(t(x)%*%x))[2])
b_est[3]/sqrt(MSRes*diag(solve(t(x)%*%x))[3])
cor(base)
ted_talks<-read.csv(file.choose())
ted_talks<-read.csv(file.choose())
View(ted_talks)
library(jsonlite)
formatted_ted_ratings <- gsub(“‘“,’”’,ted_talks$ratings)
library(tm)
formatted_ted_ratings <- gsub(“‘“,’”’,ted_talks$ratings)
formatted_ted_ratings <- gsub("'",'"',ted_talks$ratings)
formatted_ted_ratings
7%/%4
7%%4
# Signos de operaciones matemáticas
#---------------------------------------------------------------------------------
# Suma  (+)   Multiplicación (*)  Potencia  (^)           Resto div entera (%%)
# Resta (-)   División       (/)  Cociente entero (%/%)
#---------------------------------------------------------------------------------
2^4
14%%7
49%%7
49 mod 7
# Signos de operaciones matemáticas
#---------------------------------------------------------------------------------
# Suma  (+)   Multiplicación (*)  Potencia  (^)          Resto div entera (%%)
# Resta (-)   División       (/)  Cociente entero (%/%)
#---------------------------------------------------------------------------------
15+48
# Signos de operaciones matemáticas
#---------------------------------------------------------------------------------
# Suma  (+)   Multiplicación (*)  Potencia  (^)          Resto div entera (%%)
# Resta (-)   División       (/)  Cociente entero (%/%)
#---------------------------------------------------------------------------------
15+48
49%%7
# Funciones numéricas
#---------------------------------------------------------------------------------
# Raiz cuadrada..(sqrt)   Exponencial..(exp)        Log natural..(log)
# Log base 10....(log10)  Log base a...(log( ,a))   Factorial....(x!)
# Combinatoria...(choose)
#---------------------------------------------------------------------------------
sqrt(49)
exp(5)
log(exp(1))
log10(1000)
log(14,5)
4!
factorial(6)
choose(7,2)
#---------------------------------------------------------------------------------
# Seno.......(sin)   Coseno......(cos)    Tangente...........(tan)
# ArcSeno....(asin)  ArcCoseno...(acos)   ArcTangente........(atan)
# Valor absoluto...(abs)
#---------------------------------------------------------------------------------
sin(90)
sin(pi/2)
abs(-45)
#= pi esta por defecto
pi
#= print(x, n) muestra el valor de x con n cifras significativas.
print(pi/7,5)
#= print(x, n) muestra el valor de x con n cifras significativas.
print(pi/7,4)
pi/7
#= round(x, n) redondea el valor de x a n cifras decimales.
round(pi/7, 3)
#= round(x, n) redondea el valor de x a n cifras decimales.
round(pi/3, 3)
pi/3
#= pi esta por defecto
pi/3
#= round(x, n) redondea el valor de x a n cifras decimales.
round(pi/3, 3)
#= floor(x) redondea x a un número entero por defecto.
floor(pi/3)
#= ceiling(x) redondea x a un número entero por exceso.
ceiling(pi/3)
ceiling(2.4)
floor(2.4)
#= trunc(x) da la parte entera de x.
trunc(pi/3)
trunc(2.4)
#= variable=valor asigna el valor a la variable.
#= Otras construcciones equivalentes son variable<-valor y valor->variable.
edad=14
edad2<-16
20->edad3
f_fact <- function(x){
res<-1
for(i in 1:x){
res<-res*i
}
return(res)
}
f_fact(4)
factorial(4)
#1ero - Fijar nuestro directorio de trabajo:
getwd()
setwd("D:/R Studio/Tratamiento de datos con R Studio/Bases")
setwd("D:/R Studio/Tratamiento de datos con R Studio/Bases")
#1ero - Fijar nuestro directorio de trabajo donde estarán las bases:
getwd() #Esto nos dará la ruta en la cual estamos trabajando
# ARCHIVOS TXT
base1<-read.delim("Employee-data.txt",sep = "\t",header = TRUE)
View(base1)
base2<-read.csv("Employee-data,txt",sep = "\t",header = TRUE)
base2<-read.csv("Employee-data.txt",sep = "\t",header = TRUE)
View(base2)
View(base1)
str(base)
str(base2)
base2<-read.csv("Employee-data.txt",sep = "\t",header = TRUE,
stringsAsFactors = FALSE)
str(base2)
# ARCHIVOS TXT
base1<-read.delim("Employee-data.txt", #Nombre del archivo
sep = "\t", #Separador, en este caso es TAB
header = TRUE) #Si no tiene encabezado colocar FALSE
str(base1)
#como factores
str(base2)
auto <- read.csv("auto-mpg.csv", #Nombre del archivo
sep = ",", #Separador, en este caso es la coma
header = T) #Si no tiene encabezado colocar FALSE
str(auto)
names(auto)
#Nota: También se puede omitir los 2 ultimos parámetros, pues estos estan por defecto
auto2 <- read.csv("auto-mpg.csv")
View(auto2)
rm(auto2) #Con rm() removemos archivos que hayamos creado
auto_no_header<-read.csv("auto-mpg-noheader.csv",
sep = ",",
header = FALSE,
stringsAsFactors = FALSE)
View(auto_no_header)
auto_custom_header<-read.csv("auto-mpg-noheader.csv",
header = F,
col.names = c("Numero", "MillasxGaleon","Cilindros",
"Desplazamiento","CaballoPotencia","Peso",
"Aceleración","Año","Modelo")
)
View(auto_custom_header)
View(auto)
View(auto_custom_header)
str(auto_custom_header)
auto_custom_header<-read.csv("auto-mpg-noheader.csv",
header = F,
col.names = c("Numero", "MillasxGaleon","Cilindros",
"Desplazamiento","CaballoPotencia","Peso",
"Aceleración","Año","Modelo"),
stringsAsFactors = F
)
str(auto_custom_header)
names(auto_custom_header)
summary(auto_custom_header)
head(auto_custom_header,7)
head(auto_custom_header,4)
summary(auto_custom_header) #Resumen estadístico de las variables
summary(auto)
misg_data1 <- read.csv("missing-data.csv",header = T,sep = ",")
misg_data2 <- read.csv("missing-data.csv",header = T,sep = ",",na.strings = "")
head(misg_data1)
head(misg_data2)
str(misg_data1)
str(misg_data2)
summary(misg_data1)
summary(misg_data2)
base3<-read_excel("Employee-data.xlsx")
library("readxl")
base3<-read_excel("Employee-data.xlsx")
View(base3)
base3<-read_excel("Employee-data.xlsx",sheet = 1)
base3<-read_excel("Employee-data.xlsx",sheet = 2)
base3<-read_excel("Employee-data.xlsx",sheet = 1)
?reas_excel
?read_excel
library(foreign)
muestra<-read.spss(file.choose(),use.value.labels = F,to.data.frame = T)
View(muestra)
str(muestra)
muestra$MES
library(haven)
str(muestra)
muestra2 <- read_sav(file.choose())
str(muestra2)
str(muestra)
str(muestra)
summary(muestra$DOMINIO)
summary(muestra2$DOMINIO)
